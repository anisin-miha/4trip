let userConfig = undefined;
try {
  userConfig = await import("./v0-user-next.config");
} catch (e) {
  // ignore error
}

/** @type {import('next').NextConfig} */
const isProd = process.env.NODE_ENV === "production";
const repo = "patriot";

const nextConfig = {
  eslint: {
    ignoreDuringBuilds: true,
  },
  typescript: {
    ignoreBuildErrors: true,
  },
  images: {
    loader: "custom",
    imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
    deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
  },
  transpilePackages: ["next-image-export-optimizer"],
  experimental: {
    webpackBuildWorker: true,
    parallelServerBuildTraces: true,
    parallelServerCompiles: true,
  },
  // üëá –¥–ª—è GitHub Pages –∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∞
  output: "export",
  basePath: isProd ? `/${repo}` : "",
  assetPrefix: isProd ? `/${repo}/` : "",
  env: {
    // –ø–∞–ø–∫–∞ —Å –∏—Å—Ö–æ–¥–Ω—ã–º–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é public/images)
    nextImageExportOptimizer_imageFolderPath: "public/images",
    // –∫—É–¥–∞ –ø–æ–ª–æ–∂–∏—Ç—å –≥–æ—Ç–æ–≤—ã–π —ç–∫—Å–ø–æ—Ä—Ç (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é out)
    nextImageExportOptimizer_exportFolderPath: "out",
    // –∫–∞—á–µ—Å—Ç–≤–æ WebP (0‚Äì100)
    nextImageExportOptimizer_quality: "75",
    // —Ö—Ä–∞–Ω–∏—Ç—å –≤ WEBP
    nextImageExportOptimizer_storePicturesInWEBP: "true",
    // –∏–º—è –≤–ª–æ–∂–µ–Ω–Ω–æ–π –ø–∞–ø–∫–∏ –≤–Ω—É—Ç—Ä–∏ export-–∞
    nextImageExportOptimizer_exportFolderName: "nextImageExportOptimizer",
    // –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞–∑–º–∞–∑–∞–Ω–Ω—ã–µ placeholder-—ã
    nextImageExportOptimizer_generateAndUseBlurImages: "true",
    // TTL –∫–µ—à–∞ –¥–ª—è remote-–∫–∞—Ä—Ç–∏–Ω–æ–∫ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    nextImageExportOptimizer_remoteImageCacheTTL: "0",
  },
};

mergeConfig(nextConfig, userConfig);

function mergeConfig(nextConfig, userConfig) {
  if (!userConfig) return;

  for (const key in userConfig) {
    if (
      typeof nextConfig[key] === "object" &&
      !Array.isArray(nextConfig[key])
    ) {
      nextConfig[key] = {
        ...nextConfig[key],
        ...userConfig[key],
      };
    } else {
      nextConfig[key] = userConfig[key];
    }
  }
}

export default nextConfig;
